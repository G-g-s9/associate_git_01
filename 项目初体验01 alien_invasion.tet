'''

项目初体验————之外星人入侵
一系列环境配置为主

'''
pip和pygame,及一些依赖库
没安装pip的先装pip
sudo python get-pip.py
sudo apt-get install python3-pip #ubutun里直接这个了
pip install -U pip      #pip升级

先安装pygame，我是ubutun上，python 3.7.3，需要两个步骤，
1.安装pygame依赖的库
sudo apt-get install python3-dev mercurial
sudo apt-get install libsdl-image1.2-dev libsdl2-dev libsdl-ttf2.0-dev

外星人入侵所需库
sudo apt-get install libsdl-mixer1.2-dev libportmidi-dev
sudo apt-get install libswscale-dev libsmpeg-dev libavformat-dev libavcodec-dev
sudo apt-get install python-numpy
2.下载并安装pygame
教程里的失败了  pip3 install --user hg+http://bitbucket.org/pygame/pygame
实际用的成功了  sudo pip3 install pygame
    如果pygame中途安装失败，用这个试试 easy_install -U setuptools   或    pip3 install ipython

换源
sudo cp /etc/apt/sources.list /etc/apt/sources_init.list        #备份一个
sudo gedit /etc/apt/sources.list        #使用gedit打开文档，将下边的阿里源复制
                                            进去，然后点击保存关闭

阿里源 （已用
deb http://mirrors.aliyun.com/ubuntu/ xenial main
deb-src http://mirrors.aliyun.com/ubuntu/ xenial main

deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main

deb http://mirrors.aliyun.com/ubuntu/ xenial universe
deb-src http://mirrors.aliyun.com/ubuntu/ xenial universe
deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universe

deb http://mirrors.aliyun.com/ubuntu/ xenial-security main
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main
deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe
deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universe

deb http://archive.ubuntu.com/ubuntu bionic universe        # 这条是装pygame失败额外添加的. 然而，后来发现是教程里少了个字母c。。。

清华源（备用，没换
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse



sudo apt-get update     #更新源
sudo apt-get -f install     #修复损坏的软件包，尝试卸载出错的包，重新安装正确版本的
sudo apt-get upgrade        #更新软件


************************************************************************


rect        矩形对象；各数值值接受整数 ;  注：Rect是模块类，rect是变量
对象的属性：
1.返回一个坐标数字
x,y
top, left, bottom, right
centerx, centerysize
width, height
w,h;
2.返回一个（X,Y）坐标数组
topleft （左上）
bottomleft （左下）
bottomright （右下）
midtop（中上）
midleft（左中）
midbottom（底中）
midright（右中）
center（中心点坐标）

pygame.Rect.copy - 复制矩形
pygame.Rect.move - 移动矩形
pygame.Rect.move_ip - 移动矩形，就位
pygame.Rect.inflate - 增长或缩小矩形大小
pygame.Rect.inflate_ip - 生长或缩小矩形大小，就位
pygame.Rect.clamp - 将矩形移动到另一个内部
pygame.Rect.clamp_ip - 将矩形移动到另一个位置
pygame.Rect.clip - 在另一个内部收割一个矩形
pygame.Rect.union - 将两个矩形合并为一个
pygame.Rect.union_ip - 将两个矩形合并为一个，就位
pygame.Rect.unionall - 许多矩形的联合
pygame.Rect.unionall_ip - 许多矩形的联合，就位
pygame.Rect.fit - 调整大小并移动长宽比的矩形
pygame.Rect.normalize - 正确的负尺寸
pygame.Rect.contains - 测试一个矩形是否在另一个矩形内
pygame.Rect.collidepoint - 测试一个点是否在矩形内
pygame.Rect.colliderect - 测试两个矩形是否重叠
pygame.Rect.collidelist - 测试列表中的一个矩形是否相交
pygame.Rect.collidelistall - 测试列表中的所有矩形是否相交
pygame.Rect.collidedict - 测试字典中的一个矩形是否相交
pygame.Rect.collidedictall - 测试字典中的所有矩形是否相交

************************************************************************

模块临时添加完整路径（通过该方法添加，只在执行当前文件的窗口中有效，窗口关闭后即失效）
import sys
sys.path.append('/home/e/桌面/projects_new_start/alien_invasion')

通常来说，我们默认将 Python 的扩展模块添加在 lib\site-packages（linux中 dist-packages） 路径下，它专门用于存放 Python 的扩展模块和包


遇到缩进提示混用的，找找太麻烦，确定设置好编辑器保存是tab转空格，试一下应该就可以了（实在不行，直接重新敲代码块）


